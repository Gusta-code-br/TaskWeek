{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gusta\\\\Task Week Project\\\\taskweek\\\\src\\\\context\\\\TaskContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { getTasks, createTask, updateTask, deleteTask } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/createContext();\nexport function useTaskContext() {\n  _s();\n  return useContext(TaskContext);\n}\n_s(useTaskContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function TaskProvider({\n  children\n}) {\n  _s2();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      setLoading(true);\n      const data = await getTasks();\n      setTasks(data);\n      setError(null);\n    } catch (err) {\n      setError('Erro ao carregar tarefas');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addTask = async taskData => {\n    try {\n      setLoading(true);\n      const newTask = await createTask(taskData);\n      setTasks([...tasks, newTask]);\n      return newTask;\n    } catch (err) {\n      setError('Erro ao adicionar tarefa');\n      console.error(err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const editTask = async (id, taskData) => {\n    try {\n      setLoading(true);\n      const updatedTask = await updateTask(id, taskData);\n      setTasks(tasks.map(task => task.id === id ? updatedTask : task));\n      return updatedTask;\n    } catch (err) {\n      setError('Erro ao editar tarefa');\n      console.error(err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const removeTask = async id => {\n    try {\n      setLoading(true);\n      await deleteTask(id);\n      setTasks(tasks.filter(task => task.id !== id));\n    } catch (err) {\n      setError('Erro ao excluir tarefa');\n      console.error(err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const toggleTaskStatus = async id => {\n    const task = tasks.find(t => t.id === id);\n    if (task) {\n      try {\n        const updatedTask = await updateTask(id, {\n          ...task,\n          completed: !task.completed\n        });\n        setTasks(tasks.map(t => t.id === id ? updatedTask : t));\n      } catch (err) {\n        setError('Erro ao atualizar status da tarefa');\n        console.error(err);\n        throw err;\n      }\n    }\n  };\n  const getTasksByDay = day => {\n    return tasks.filter(task => task.day === day);\n  };\n  const value = {\n    tasks,\n    loading,\n    error,\n    addTask,\n    editTask,\n    removeTask,\n    toggleTaskStatus,\n    getTasksByDay,\n    refreshTasks: fetchTasks\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s2(TaskProvider, \"qwRs5Xd4E7WtXCZK9zh6nomhOw4=\");\n_c = TaskProvider;\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","getTasks","createTask","updateTask","deleteTask","jsxDEV","_jsxDEV","TaskContext","useTaskContext","_s","TaskProvider","children","_s2","tasks","setTasks","loading","setLoading","error","setError","fetchTasks","data","err","console","addTask","taskData","newTask","editTask","id","updatedTask","map","task","removeTask","filter","toggleTaskStatus","find","t","completed","getTasksByDay","day","value","refreshTasks","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gusta/Task Week Project/taskweek/src/context/TaskContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { getTasks, createTask, updateTask, deleteTask } from '../services/api';\r\n\r\nconst TaskContext = createContext();\r\n\r\nexport function useTaskContext() {\r\n  return useContext(TaskContext);\r\n}\r\n\r\nexport function TaskProvider({ children }) {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await getTasks();\r\n      setTasks(data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Erro ao carregar tarefas');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const addTask = async (taskData) => {\r\n    try {\r\n      setLoading(true);\r\n      const newTask = await createTask(taskData);\r\n      setTasks([...tasks, newTask]);\r\n      return newTask;\r\n    } catch (err) {\r\n      setError('Erro ao adicionar tarefa');\r\n      console.error(err);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const editTask = async (id, taskData) => {\r\n    try {\r\n      setLoading(true);\r\n      const updatedTask = await updateTask(id, taskData);\r\n      setTasks(tasks.map(task => task.id === id ? updatedTask : task));\r\n      return updatedTask;\r\n    } catch (err) {\r\n      setError('Erro ao editar tarefa');\r\n      console.error(err);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const removeTask = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      await deleteTask(id);\r\n      setTasks(tasks.filter(task => task.id !== id));\r\n    } catch (err) {\r\n      setError('Erro ao excluir tarefa');\r\n      console.error(err);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleTaskStatus = async (id) => {\r\n    const task = tasks.find(t => t.id === id);\r\n    if (task) {\r\n      try {\r\n        const updatedTask = await updateTask(id, {\r\n          ...task,\r\n          completed: !task.completed\r\n        });\r\n        setTasks(tasks.map(t => t.id === id ? updatedTask : t));\r\n      } catch (err) {\r\n        setError('Erro ao atualizar status da tarefa');\r\n        console.error(err);\r\n        throw err;\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTasksByDay = (day) => {\r\n    return tasks.filter(task => task.day === day);\r\n  };\r\n\r\n  const value = {\r\n    tasks,\r\n    loading,\r\n    error,\r\n    addTask,\r\n    editTask,\r\n    removeTask,\r\n    toggleTaskStatus,\r\n    getTasksByDay,\r\n    refreshTasks: fetchTasks,\r\n  };\r\n\r\n  return (\r\n    <TaskContext.Provider value={value}>\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}